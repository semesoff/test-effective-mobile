basePath: /api
definitions:
  request.User:
    description: Данные пользователя с дополнительной информацией
    properties:
      age:
        example: 25
        type: integer
      gender:
        example: male
        type: string
      name:
        example: Donald
        type: string
      nation:
        example: US
        type: string
      patronymic:
        example: Duck
        type: string
      surname:
        example: Trump
        type: string
    type: object
  request.UserInput:
    description: Входные данные для создания пользователя
    properties:
      name:
        example: Donald
        type: string
      patronymic:
        example: Duck
        type: string
      surname:
        example: Trump
        type: string
    required:
    - name
    - surname
    type: object
  response.FullUser:
    description: Полные данные пользователя с id
    properties:
      age:
        example: 25
        type: integer
      gender:
        example: male
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Donald
        type: string
      nation:
        example: US
        type: string
      patronymic:
        example: Duck
        type: string
      surname:
        example: Trump
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Enrichment Service
  title: API Service
  version: 1.0.0
paths:
  /users:
    get:
      consumes:
      - application/json
      description: получение пользователей по фильтру
      parameters:
      - example: 25
        in: query
        name: age
        type: integer
      - example: male
        in: query
        name: gender
        type: string
      - example: 3
        in: query
        name: limit
        type: integer
      - example: Donald
        in: query
        name: name
        type: string
      - example: US
        in: query
        name: nation
        type: string
      - example: 2
        in: query
        name: offset
        type: integer
      - example: Duck
        in: query
        name: patronymic
        type: string
      - example: Trump
        in: query
        name: surname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.FullUser'
            type: array
        "400":
          description: 'error": "Invalid format'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "error message'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение пользователей
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Создание нового пользователя
      parameters:
      - description: User Input
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.FullUser'
        "400":
          description: 'error": "Invalid format'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "error message'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создание пользователя
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: удаление пользователя по id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "User deleted'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error": "Invalid format'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "error message'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удаление пользователя
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Изменение данных пользователя по некоторым данным
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: newUserData
        required: true
        schema:
          $ref: '#/definitions/request.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.FullUser'
        "400":
          description: 'error": "Invalid format'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "error message'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Изменение данных пользователя
      tags:
      - users
swagger: "2.0"
